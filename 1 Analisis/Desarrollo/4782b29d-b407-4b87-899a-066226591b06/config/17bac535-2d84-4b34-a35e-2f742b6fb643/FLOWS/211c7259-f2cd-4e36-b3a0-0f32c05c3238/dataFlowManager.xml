<Definition><MessageFlow uuid="211c7259-f2cd-4e36-b3a0-0f32c05c3238" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" StatsSnapNodeDataLevel="basic" StatsSnapOutputFormat="json,usertrace" StatsSnapPublicationOn="active" StatsSnapThreadDataLevel="basic" label="mqsi.Response" additionalInstances="0" commitCount="1" commitInterval="0" traceNodeLevel="on" coordinatedTransaction="no" monitoring="active" deployInfo="PGRlcGxveUluZm8gdmVyc2lvbj0iMSI+PGJhciBiYXJmaWxlbmFtZT0iL2RlL2luc3RhbGFkb3Jlcy9iYXIvTUJDUFNPQTEvTGVhc2luZ19kZS5iYXIiIHRpbWU9IjIwMTUtMDctMTYgMTI6MTA6NDguMDAwIC0wNTAwIi8+PGRlcGxveSB0aW1lPSIyMDIyLTA3LTI5IDEwOjIxOjI1LjAxNCAtMDUwMCIgdXNlcklkPSJtcW0iLz48YnJva2VyIHRpbWU9IjIwMjItMDctMjkgMTA6MjE6MjUuMDE0IC0wNTAwIiB1c2VySWQ9Im1xbSIvPjxrZXl3b3Jkcy8+PC9kZXBsb3lJbmZvPg==" version="1" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " activeUserExitList="" inactiveUserExitList=""><DTXPlugInNode uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="ResponseProcessor.Salida" Map="" MapSettings="" InputCard="0" OutputCard="0" OutputDomain="" OutputSet="" OutputType="" OutputFormat="" CacheMap="Y" MarFileName="ResponseProcessor.Salida.ActualizacionClientesResposne.mar" ExecutableMap="ActualizacionClientesResposne" SourceMap="LeasingWTX\AS400ToHost.mms" LocalCompiledMap="" MapServerLocation="" CardNoToWire="1" CardNoToWireLabel="" UseLocalMapSwitch="" Repository="" OutputProperties="" SourceMapProperty="" ExeMapLabel_SetWorkDir="/LeasingWTX" ExternalButton="P" ExternalLabel="" ProjectButton="P" ProjectLabel="" MessageDomain="0" MessageSet="0" MessageType="0" MessageFormat="0" CCSID="0" Encoding="0"><Terminal label="out1" type="output"/></DTXPlugInNode><ComIbmMQGetNode uuid="mqsi/Response#FCMComposite_1_10" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="HostOUT" longDesc="This MQ Get node reads  corresponding stored message, selected via the message correlator ID.  This message contains the original request MQMD containing the reply-to queue and queue manager name of the requestor application that was stored during the request flow

Lee la respuesta de Host en las colas de la arquitectura PS9" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" inputMQParmsLocation="InputLocalEnvironment.MQ.GET" inputMQMDLocation="InputRoot.MQMD" outputDataLocation="OutputRoot" resultDataLocation="ResultRoot" warningDataLocation="OutputRoot" outputMQParmsLocation="OutputLocalEnvironment.MQ.GET" includeData="yes" queueName="QL.SOA.PS9.MB.OUT" transactionMode="no" copyMessage="copyEntireMessage" copyLocalEnv="copyEntireLocalEnvironment" generateMode="message" waitInterval="10000" minimumGetBufferSize="1" getWithCorrelID="yes" getWithMessageID="no" browse="no" useWholeInputMQMD="no" connectorName="MQ"><OutputTerminal uuid="noMessage"/><OutputTerminal uuid="warning"/></ComIbmMQGetNode><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_11" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="MQ Warning" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE HandleMQGetWarning
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- The MQGet Node received a MQ Warning
		-- The Tree will contain just a MQMD and any message content received 
		-- in a BLOB, no parsing will be performed.
		-- This could occur if the get options were set to accept truncated
		-- messages. We have not set that option here.
		-- Throw a user exception
		DECLARE reasonStr CHAR;
		SET Environment.Variables.StatusCode = -3; 
		SET reasonStr = &apos;Failure to recover reply address in the Message Correlator for WebSphere MQ: request-response with persistence pattern&apos;;
		THROW USER EXCEPTION SEVERITY 3 MESSAGE 2372 VALUES(reasonStr);
		RETURN TRUE;
	END;
END MODULE;" computeMode="message" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_12" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Missing Stored Msg" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE HandleMissingStoredMsg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- The MQGet Node failed to get a message from the Store Queue
		-- Throw a user exception
		DECLARE reasonStr CHAR;
		SET reasonStr = &apos;Failure to recover reply address in the Message Correlator for WebSphere MQ: request-response with persistence pattern&apos;;
		THROW USER EXCEPTION SEVERITY 3 MESSAGE 2372 VALUES(reasonStr);
		RETURN TRUE;
	END;
END MODULE;" computeMode="all" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmMQHeaderNode uuid="mqsi/Response#FCMComposite_1_19" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="MQ Header" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " mqdlhAAAOptions="Carry forward header" mqdlhCodedCharSetId="Inherit" mqdlhDestQMgrName="Inherit" mqdlhDestQName="Inherit" mqdlhFormat="Inherit" mqdlhReason="Inherit" mqdlhSaveDLQueue="true" mqdlhSaveSrcQueue="true" mqmdAAAOptions="Modify header" mqmdCOA="" mqmdCOD="" mqmdCodedCharSetId="Inherit" mqmdCorrelId="Inherit" mqmdException="" mqmdExpiration="" mqmdExpiry="500" mqmdFeedback="Inherit" mqmdFormat="Inherit" mqmdMsgId="Inherit" mqmdMsgType="Inherit" mqmdNotification="" mqmdPersistence="Inherit" mqmdPriority="Inherit" mqmdReplyToQ="QLD.SLES.RESP.CO" mqmdReplyToQMgr="QMDCSOA1" mqmdReport="Inherit" mqmdVersion="Inherit"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmMQHeaderNode><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Create Error Response" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Create_Error_Reply
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Copy MQMD which contains reply address
	SET OutputRoot.MQMD = InputRoot.MQMD;
-- Set CorrelId to message ID so requester can retrieve by correlId
	SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
-- Set up Error response
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN(&apos;XMLNSC&apos;) NAME &apos;XMLNSC&apos;;
	SET OutputRoot.XMLNSC.Error.Status = -1;
	SET OutputRoot.XMLNSC.Error.Text = &apos;Failed to send message, in the Message Correlator for WebSphere MQ: request-response with persistence pattern&apos;;	
	RETURN TRUE;
	END;
END MODULE;" computeMode="message" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmMQOutputNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Error Output" validateMaster="none" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" queueManagerName="" queueName="ERROR" firstParserClassName="BLOB" persistenceMode="yes" transactionMode="no"/><ComIbmFilterNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply if Request Mode" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" filterExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE FILTER MODULE Request_Check
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Do not send a reply if this message has already been backed out
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; END IF;
-- Only send a reply if in request mode (do not know where to go if error is in response flow)
	IF  Environment.Variables.RRMode = &apos;Request&apos; 
	THEN RETURN TRUE;
	ELSE RETURN FALSE;
	END IF;
	END;
END MODULE;"><OutputTerminal uuid="true"/><OutputTerminal uuid="false"/><OutputTerminal uuid="unknown"/><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmFilterNode><ComIbmFlowOrderNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply First"><OutputTerminal uuid="first"/><OutputTerminal uuid="second"/></ComIbmFlowOrderNode><ComIbmMQOutputNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply.ComIbmMQOutput" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" destinationMode="reply" firstParserClassName="BLOB" persistenceMode="yes" transactionMode="no"/><ComIbmThrowNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Throw" messageCatalog="" messageNumber="3001" messageText="Pattern instance ConsultaFlow of the Message Correlator for WebSphere MQ: request-response with persistence pattern has rolled back the input message. See the previous messages for details of the error "/><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Build Error Message" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Build_Error_Message
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	SET OutputRoot.MQMD = InputRoot.MQMD;
	SET OutputRoot.Properties = NULL;
	Call AddExceptionData();
    END;
	
	CREATE PROCEDURE AddExceptionData() BEGIN
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN(&apos;XMLNSC&apos;) NAME &apos;XMLNSC&apos;;
	SET OutputRoot.XMLNSC.Error.BrokerName  = SQL.BrokerName;
	DECLARE ERef REFERENCE TO OutputRoot.XMLNSC.Error;
	SET ERef.MessageFlowLabel = SQL.MessageFlowLabel; 
    SET ERef.DTSTAMP =   CURRENT_TIMESTAMP;  
	SET ERef.StatusCode = -1;
     
    -- Add some exception data for error and fault
		DECLARE Error INTEGER;
		DECLARE Text CHARACTER;
		DECLARE Label CHARACTER;
		DECLARE I INTEGER 1;
		DECLARE K INTEGER;
		DECLARE start REFERENCE TO InputExceptionList.*[1];

		WHILE start.Number IS NOT NULL DO 
			SET Label = start.Label;
			SET Error = start.Number;
			IF Error = 3001 THEN
				SET Text = start.Insert.Text;
			ELSE
				SET Text = start.Text;
			END IF;
			-- Don&apos;t include the &quot;Caught exception and rethrowing message&quot;
			IF Error &lt;&gt; 2230 THEN
				-- Process inserts
				DECLARE Inserts Character;
				DECLARE INS Integer;
				SET Inserts = &apos;&apos;;
				-- Are there any inserts for this exception
				IF EXISTS (start.Insert[]) THEN
					-- If YES add them to inserts string
				 	SET Inserts = Inserts || COALESCE(start.Insert[1].Text,&apos;NULL&apos;)|| &apos; / &apos;;
				 	SET K = 1;
				 	INSERTS: LOOP
						IF CARDINALITY(start.Insert[])&gt; K 
						THEN 
							SET Inserts = Inserts || COALESCE(start.Insert[K+1].Text,&apos;NULL&apos;)|| &apos; / &apos;;
						-- No more inserts to process
						ELSE LEAVE INSERTS;
						END IF;
					SET K = K+1;
					END LOOP INSERTS;
				END IF;
				SET ERef.Exception[I].Label = Label;
				SET ERef.Exception[I].Error = Error;
				SET ERef.Exception[I].Text = Text;
				Set ERef.Exception[I].Inserts = COALESCE(Inserts, &apos;&apos;);
				
				SET I = I+1; 
			END IF;
			-- Move start to the last child of the field to which it currently points
			MOVE start LASTCHILD;
		END WHILE;

	END;
	

END MODULE;" computeMode="message" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmFilterNode uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.ErrorLoggingOn?" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" filterExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE FILTER MODULE ErrorQ_check
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Do not write a second error message if this message has already been backed out
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; 		
	ELSE RETURN ErrorLoggingOn;
	END IF;
	END;
END MODULE;"><OutputTerminal uuid="true"/><OutputTerminal uuid="false"/><OutputTerminal uuid="unknown"/><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmFilterNode><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_20" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Compute" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Response_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		SET OutputRoot.MQMD.CorrelId = Environment.MQMD.CorrelId;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;" computeMode="all" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmMQHeaderNode uuid="mqsi/Response#FCMComposite_1_24" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="MQ Header2" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " mqdlhAAAOptions="Carry forward header" mqdlhCodedCharSetId="Inherit" mqdlhDestQMgrName="Inherit" mqdlhDestQName="Inherit" mqdlhFormat="Inherit" mqdlhReason="Inherit" mqdlhSaveDLQueue="true" mqdlhSaveSrcQueue="true" mqmdAAAOptions="Modify header" mqmdCOA="" mqmdCOD="" mqmdCodedCharSetId="Inherit" mqmdCorrelId="Inherit" mqmdException="" mqmdExpiration="" mqmdExpiry="300" mqmdFeedback="Inherit" mqmdFormat="Inherit" mqmdMsgId="Inherit" mqmdMsgType="Inherit" mqmdNotification="" mqmdPersistence="0" mqmdPriority="Inherit" mqmdReplyToQ="QL.SOA.PS9.MB.OUT" mqmdReplyToQMgr="QMDCSOA1" mqmdReport="Inherit" mqmdVersion="Inherit"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmMQHeaderNode><ComIbmMQOutputNode uuid="mqsi/Response#FCMComposite_1_27" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="As400IN" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" queueName="QLD.SLES.RESP.CO" firstParserClassName="BLOB"/><ComIbmMQOutputNode uuid="mqsi/Response#FCMComposite_1_3" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="HostIN" longDesc="Envía el mensaje a PS9 para que lo envíe a Host en el formato XML que este lo espera" validateMaster="none" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" queueName="QL.SOA.PS9.IN" firstParserClassName="BLOB"/><ComIbmTraceNode uuid="mqsi/Response#FCMComposite_1_4" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Trace" destination="file" messageCatalog="" messageNumber="3051" filePath="/log/pipePS9/SOA/trace.txt" pattern="${Root}"/><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_5" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="RestoreMQMD" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Response_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		 --CALL CopyEntireMessage();
		  
		 SET OutputRoot.MQMD.CorrelId = Environment.MQMD.CorrelId;
		  
		 DECLARE MENSAJE CHARACTER;
		 DECLARE POS1 INT 1;
		 DECLARE POS2 INT 1;
		 DECLARE MESSAGENAME CHARACTER;
		 DECLARE cadena BLOB;
		 
		 SET MENSAJE = CAST(InputRoot.&quot;BLOB&quot;.&quot;BLOB&quot; AS CHARACTER CCSID 1208);
		 SET POS1 = POSITION(&apos;&lt;tramaRespuesta&gt;&apos; IN MENSAJE);
		 SET POS2 = POSITION(&apos;&lt;/tramaRespuesta&gt;&apos; IN MENSAJE);
		 SET MESSAGENAME = SUBSTRING(MENSAJE FROM POS1 FOR (POS2));
		 SET POS2 = POSITION(&apos;&lt;/tramaRespuesta&gt;&apos; IN MESSAGENAME);
		 SET MENSAJE = SUBSTRING(MESSAGENAME FROM 17 FOR (POS2-17));
		 SET Environment.Mensaje = MENSAJE;
		 SET cadena =  CAST(MENSAJE AS BLOB CCSID 1208);
		 
		 SET &quot;OutputRoot&quot;.&quot;BLOB&quot;.&quot;BLOB&quot; = cadena;
		  
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;" computeMode="all" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmComputeNode uuid="mqsi/Response#FCMComposite_1_6" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="SaveMQMD" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Response_SaveMQMD
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		
		SET OutputRoot.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Version = &apos;1.0&apos;;
		SET OutputRoot.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Encoding = &apos;UTF-8&apos;;
				
		SET OutputRoot.XMLNSC.requestTransaccion.Aplicacion = Aplicacion;
		SET OutputRoot.XMLNSC.requestTransaccion.Operacion  = Operacion;
		SET OutputRoot.XMLNSC.requestTransaccion.trama = CAST(InputRoot.&quot;BLOB&quot;.&quot;BLOB&quot; AS CHARACTER CCSID 284);
		SET OutputRoot.MQMD.CodedCharSetId = 1208;
		
		SET Environment.MQMD = InputRoot.MQMD;
		SET Environment.MQMD.CorrelId = InputRoot.MQMD.MsgId;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;" computeMode="all" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmMQInputNode uuid="mqsi/Response#FCMComposite_1_7" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="As400OUT" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" transactionMode="no" validate="no" rootParserClassName="MQROOT" queueName="QLD.SLES.ENVIO.CO" firstParserClassName="BLOB"/><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="noMessage" targetNode="mqsi/Response#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="warning" targetNode="mqsi/Response#FCMComposite_1_11" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_19" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_4" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="false" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="unknown" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_20" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_10" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_24" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_3" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_3" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_20" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_4" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_27" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_5" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_19" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_6" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_24" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="catch" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="catch" targetNode="mqsi/Response#FCMComposite_1_2" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_6" targetTerminal="in"/></MessageFlow><Supplement Status="yes" startMode="Maintained" deployedAsSource="false" testRecordMode="Disabled"/></Definition>