<Definition><MessageFlow uuid="8b36f1a3-9d1d-4ff2-bcd0-62aa6347215c" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" StatsSnapNodeDataLevel="basic" StatsSnapOutputFormat="json,usertrace" StatsSnapPublicationOn="active" StatsSnapThreadDataLevel="basic" label="mqsi.Request" additionalInstances="0" commitCount="1" commitInterval="0" traceNodeLevel="on" coordinatedTransaction="no" monitoring="active" deployInfo="PGRlcGxveUluZm8gdmVyc2lvbj0iMSI+PGJhciBiYXJmaWxlbmFtZT0iL2RlL2luc3RhbGFkb3Jlcy9iYXIvTUJDUFNPQTEvTGVhc2luZ19kZS5iYXIiIHRpbWU9IjIwMTUtMDctMTYgMTI6MTA6NTAuMDAwIC0wNTAwIi8+PGRlcGxveSB0aW1lPSIyMDIyLTA3LTI5IDEwOjIxOjI1LjAxNCAtMDUwMCIgdXNlcklkPSJtcW0iLz48YnJva2VyIHRpbWU9IjIwMjItMDctMjkgMTA6MjE6MjUuMDE0IC0wNTAwIiB1c2VySWQ9Im1xbSIvPjxrZXl3b3Jkcy8+PC9kZXBsb3lJbmZvPg==" version="1" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " activeUserExitList="" inactiveUserExitList=""><ComIbmMQInputNode uuid="mqsi/Request#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="HostOut" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" firstParserClassName="BLOB" transactionMode="yes" validate="no" rootParserClassName="MQROOT" queueName="QLD.LEASM.ENVIO"/><DTXPlugInNode uuid="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Request Processor.Entrada" Map="" MapSettings="" InputCard="0" OutputCard="0" OutputDomain="" OutputSet="" OutputType="" OutputFormat="" CacheMap="Y" MarFileName="RequestProcessor.Entrada.ActualizacionClientesRequest.mar" ExecutableMap="ActualizacionClientesRequest" SourceMap="LeasingWTX\HostToAS400.mms" LocalCompiledMap="" MapServerLocation="" CardNoToWire="1" CardNoToWireLabel="" UseLocalMapSwitch="" Repository="" OutputProperties="" SourceMapProperty="" ExeMapLabel_SetWorkDir="/LeasingWTX" ExternalButton="P" ExternalLabel="" ProjectButton="P" ProjectLabel="" MessageDomain="0" MessageSet="0" MessageType="0" MessageFormat="0" CCSID="0" Encoding="0"><Terminal label="out1" type="output"/><Attribute uuid="OutputProperties" type="Complex"><MbTable><Row><OutNo type="INTEGER">1</OutNo><MessageDomain type="CHARACTER">BLOB</MessageDomain><MessageSet type="CHARACTER"/><MessageType type="CHARACTER"/><MessageFormat type="CHARACTER"/><CCSID type="INTEGER">0</CCSID><Encoding type="INTEGER">0</Encoding></Row></MbTable></Attribute></DTXPlugInNode><ComIbmMQOutputNode uuid="mqsi/Request#FCMComposite_1_4" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="AS400IN" validateMaster="none" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" firstParserClassName="BLOB" queueManagerName="" queueName="QRD.SLES.RESP.QMDCLAS4.CO" persistenceMode="yes" transactionMode="yes"/><ComIbmComputeNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Create Error Response" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Create_Error_Reply
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Copy MQMD which contains reply address
	SET OutputRoot.MQMD = InputRoot.MQMD;
-- Set CorrelId to message ID so requester can retrieve by correlId
	SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;
-- Set up Error response
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN(&apos;XMLNSC&apos;) NAME &apos;XMLNSC&apos;;
	SET OutputRoot.XMLNSC.Error.Status = -1;
	SET OutputRoot.XMLNSC.Error.Text = &apos;Failed to send message, in the Message Correlator for WebSphere MQ: request-response with persistence pattern&apos;;	
	RETURN TRUE;
	END;
END MODULE;" computeMode="message" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmMQOutputNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Error Output" validateMaster="none" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" firstParserClassName="BLOB" queueManagerName="" queueName="ERROR" persistenceMode="yes" transactionMode="no"/><ComIbmFilterNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply if Request Mode" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" filterExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE FILTER MODULE Request_Check
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Do not send a reply if this message has already been backed out
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; END IF;
-- Only send a reply if in request mode (do not know where to go if error is in response flow)
	IF  Environment.Variables.RRMode = &apos;Request&apos; 
	THEN RETURN TRUE;
	ELSE RETURN FALSE;
	END IF;
	END;
END MODULE;"><OutputTerminal uuid="true"/><OutputTerminal uuid="false"/><OutputTerminal uuid="unknown"/><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmFilterNode><ComIbmFlowOrderNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply First"><OutputTerminal uuid="first"/><OutputTerminal uuid="second"/></ComIbmFlowOrderNode><ComIbmMQOutputNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Reply.ComIbmMQOutput" messageDomainProperty="" messageSetProperty="" messageTypeProperty="" messageFormatProperty="" messageEncodingProperty="0" messageCodedCharSetIdProperty="0" topicProperty="" firstParserClassName="BLOB" destinationMode="reply" persistenceMode="yes" transactionMode="no"/><ComIbmThrowNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Throw" messageCatalog="" messageNumber="3001" messageText="Pattern instance ConsultaFlow of the Message Correlator for WebSphere MQ: request-response with persistence pattern has rolled back the input message. See the previous messages for details of the error "/><ComIbmComputeNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.Build Error Message" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Build_Error_Message
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	SET OutputRoot.MQMD = InputRoot.MQMD;
	SET OutputRoot.Properties = NULL;
	Call AddExceptionData();
    END;
	
	CREATE PROCEDURE AddExceptionData() BEGIN
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN(&apos;XMLNSC&apos;) NAME &apos;XMLNSC&apos;;
	SET OutputRoot.XMLNSC.Error.BrokerName  = SQL.BrokerName;
	DECLARE ERef REFERENCE TO OutputRoot.XMLNSC.Error;
	SET ERef.MessageFlowLabel = SQL.MessageFlowLabel; 
    SET ERef.DTSTAMP =   CURRENT_TIMESTAMP;  
	SET ERef.StatusCode = -1;
     
    -- Add some exception data for error and fault
		DECLARE Error INTEGER;
		DECLARE Text CHARACTER;
		DECLARE Label CHARACTER;
		DECLARE I INTEGER 1;
		DECLARE K INTEGER;
		DECLARE start REFERENCE TO InputExceptionList.*[1];

		WHILE start.Number IS NOT NULL DO 
			SET Label = start.Label;
			SET Error = start.Number;
			IF Error = 3001 THEN
				SET Text = start.Insert.Text;
			ELSE
				SET Text = start.Text;
			END IF;
			-- Don&apos;t include the &quot;Caught exception and rethrowing message&quot;
			IF Error &lt;&gt; 2230 THEN
				-- Process inserts
				DECLARE Inserts Character;
				DECLARE INS Integer;
				SET Inserts = &apos;&apos;;
				-- Are there any inserts for this exception
				IF EXISTS (start.Insert[]) THEN
					-- If YES add them to inserts string
				 	SET Inserts = Inserts || COALESCE(start.Insert[1].Text,&apos;NULL&apos;)|| &apos; / &apos;;
				 	SET K = 1;
				 	INSERTS: LOOP
						IF CARDINALITY(start.Insert[])&gt; K 
						THEN 
							SET Inserts = Inserts || COALESCE(start.Insert[K+1].Text,&apos;NULL&apos;)|| &apos; / &apos;;
						-- No more inserts to process
						ELSE LEAVE INSERTS;
						END IF;
					SET K = K+1;
					END LOOP INSERTS;
				END IF;
				SET ERef.Exception[I].Label = Label;
				SET ERef.Exception[I].Error = Error;
				SET ERef.Exception[I].Text = Text;
				Set ERef.Exception[I].Inserts = COALESCE(Inserts, &apos;&apos;);
				
				SET I = I+1; 
			END IF;
			-- Move start to the last child of the field to which it currently points
			MOVE start LASTCHILD;
		END WHILE;

	END;
	

END MODULE;" computeMode="message" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><ComIbmFilterNode uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Error.ErrorLoggingOn?" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="no" initialStackSize="256" filterExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE FILTER MODULE ErrorQ_check
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
-- Do not write a second error message if this message has already been backed out
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; 		
	ELSE RETURN ErrorLoggingOn;
	END IF;
	END;
END MODULE;"><OutputTerminal uuid="true"/><OutputTerminal uuid="false"/><OutputTerminal uuid="unknown"/><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmFilterNode><ComIbmComputeNode uuid="mqsi/Request#FCMComposite_1_6" userTraceLevel="none" traceLevel="none" userTraceFilter="none" traceFilter="none" label="Set Request Mode" longDesc="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.relmq Version 1.0     
     
$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.relmq MQSI$     
$MQSI patternVersion=1.0 MQSI$     " dataSource="" transaction="automatic" treatWarningsAsErrors="no" throwExceptionOnDatabaseError="yes" initialStackSize="256" computeExpression="
CREATE SCHEMA mqsi PATH &quot;&quot;

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE Aplicacion  EXTERNAL CHARACTER &apos;LEASING&apos;;
DECLARE Operacion  EXTERNAL CHARACTER &apos;ActualizacionClientesLeasing&apos;;
CREATE COMPUTE MODULE Request_Initialise

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;
		
		SET Environment.Variables.RRMode = &apos;Request&apos;;
		
		RETURN TRUE;
	END;
END MODULE;" computeMode="all" validate="no" freeResources="no"><Attribute uuid="ErrorLoggingOn" type="BOOLEAN">TRUE</Attribute></ComIbmComputeNode><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="catch" targetNode="mqsi/Request#FCMComposite_1_6" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="failure" targetNode="mqsi/Request#FCMComposite_1_6" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_34" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" sourceTerminal="out1" targetNode="mqsi/Request#FCMComposite_1_4" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" sourceTerminal="out1" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#OutTerminal.Output" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_34" sourceTerminal="Output" targetNode="mqsi/Request#FCMComposite_1_4" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2" sourceTerminal="true" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="failure" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="false" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="unknown" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_6" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_6" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/></Connection></MessageFlow><Supplement Status="no" startMode="Maintained" deployedAsSource="false" testRecordMode="Disabled"/></Definition>