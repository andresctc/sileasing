<?xml version="1.0" encoding="UTF-8"?>
<MessageFlow><ConfigurablePropertyTable><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/><version value="$MQSI_VERSION=1 MQSI$"/></Documentation><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Build Error Message.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Build Error Message.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Build Error Message.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Create Error Response.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Create Error Response.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Create Error Response.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#ErrorLoggingOn?.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#ErrorLoggingOn?.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Reply if Request Mode.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Reply if Request Mode.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Reply.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Create Log Message.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Log Message.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Log Message.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Create Trace Data.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Trace Data.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Trace Data.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Logging On?.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Logging On?.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmTrace" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Trace.filePath"><Documentation><longDesc/></Documentation><TargetProperty name="filePath" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_16"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Add Reply Address.mqdlhDestQMgrName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQMgrName" uuid="mqsi/Request#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Add Reply Address.mqdlhDestQName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQName" uuid="mqsi/Request#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Add Reply Address.mqmdReplyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQ" uuid="mqsi/Request#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Add Reply Address.mqmdReplyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQMgr" uuid="mqsi/Request#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/Request" nodePluginId="LeasingAs400_Flows" type="Boolean" uri="mqsi.Request#ErrorLoggingOn" userDefined="true"><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/></Documentation><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_2"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_7"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_8"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_10"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Request#Extract Original MQMD.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Extract Original MQMD.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Extract Original MQMD.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Propagate Request.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty brokerDefault="0" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="Integer" uri="mqsi.Request#Read Request.additionalInstances"><Documentation><longDesc/></Documentation><TargetProperty name="additionalInstances" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="flow" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.componentLevel"><Documentation><longDesc/></Documentation><TargetProperty name="componentLevel" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="-1" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="Integer" uri="mqsi.Request#Read Request.resetBrowseTimeout"><Documentation><longDesc/></Documentation><TargetProperty name="resetBrowseTimeout" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.serializationToken"><Documentation><longDesc/></Documentation><TargetProperty name="serializationToken" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.topicProperty"><Documentation><longDesc/></Documentation><TargetProperty name="topicProperty" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Read Request.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/Request" nodePluginId="LeasingAs400_Flows" type="Boolean" uri="mqsi.Request#RequestLoggingOn" userDefined="true"><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/></Documentation><TargetProperty name="RequestLoggingOn" uuid="mqsi/Request#FCMComposite_1_2"/><TargetProperty name="RequestLoggingOn" uuid="mqsi/Request#FCMComposite_1_7"/><TargetProperty name="RequestLoggingOn" uuid="mqsi/Request#FCMComposite_1_8"/><TargetProperty name="RequestLoggingOn" uuid="mqsi/Request#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Save to Store.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Request#Set Request Mode.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Set Request Mode.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Set Request Mode.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Store Reply Address.mqdlhDestQMgrName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQMgrName" uuid="mqsi/Request#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Store Reply Address.mqdlhDestQName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQName" uuid="mqsi/Request#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Store Reply Address.mqmdReplyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQ" uuid="mqsi/Request#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Request#Store Reply Address.mqmdReplyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQMgr" uuid="mqsi/Request#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.RequestProcessor#Compute.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.RequestProcessor#Compute.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.RequestProcessor#Compute.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2"/></ConfigurableProperty></ConfigurablePropertyTable><ComIbmFlowOrderNode label="Save First" uuid="mqsi/Request#FCMComposite_1_3"/><ComIbmMQInputNode convertCodedCharSetId="1208" convertEncoding="546" label="Read Request" messageDomainProperty="BLOB" transactionMode="no" uuid="mqsi/Request#FCMComposite_1_1"/><ComIbmComputeNode label="Request Processor.Compute" uuid="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE RequestProcessor_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		
		SET InputLocalEnvironment.Variables.MsglId = InputRoot.MQMD.MsgId;
				
		CALL CopyEntireMessage();
		SET OutputRoot.MQRFH2 = null;		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQHeaderNode label="Add Reply Address" mqmdAAAOptions="Add header" mqmdCodedCharSetId="0" mqmdCorrelId="000000000000000000000000000000000000000000000000" mqmdExpiry="3000" mqmdFeedback="0" mqmdFormat="MQSTR   " mqmdMsgId="$LocalEnvironment/Variables/MsglId" mqmdMsgType="1" mqmdPersistence="0" mqmdPriority="-1" mqmdVersion="1" uuid="mqsi/Request#FCMComposite_1_2"/><ComIbmMQOutputNode label="Propagate Request" persistenceMode="no" transactionMode="no" uuid="mqsi/Request#FCMComposite_1_4"/><ComIbmComputeNode label="Extract Original MQMD" uuid="mqsi/Request#FCMComposite_1_7"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE ExtractOriginalMQMD&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
		-- This is first compute - initialise to indicate Request Leg&#xd;
		SET Environment.Variables.RRMode = 'Request';&#xd;
		SET Environment.Variables.RequestLoggingOn = RequestLoggingOn;&#xd;
		&#xd;
		&#xd;
		--SET OutputRoot.MQMD.Format = 'MQSTR';&#xd;
	    	    &#xd;
	    &#xd;
	    -- Check that the MQMD Header includes a REPLYTOQ&#xd;
		IF LENGTH(InputRoot.MQMD.ReplyToQ) = 0 THEN&#xd;
			THROW USER EXCEPTION SEVERITY 3 MESSAGE 2372 VALUES('No MQ reply address provided, in the Message Correlator for WebSphere MQ: request-response without persistence pattern');&#xd;
		END IF;&#xd;
&#xd;
	&#xd;
		-- Copy the incoming original MQMD&#xd;
		--DECLARE I INTEGER 1;&#xd;
		--DECLARE J INTEGER CARDINALITY(InputRoot.*[]);&#xd;
		--WHILE I &lt; J  DO&#xd;
			&#xd;
			--InputRoot.*[I].&#xd;
			&#xd;
		--	SET OutputRoot.*[I] = InputRoot.*[I];&#xd;
		--	SET I = I + 1;&#xd;
		--END WHILE;&#xd;
&#xd;
		-- Copy MsgId to CorrelId as the Backend reply application would do&#xd;
		-- This enables the MQGet node in the Reply flow to retrieve the&#xd;
		-- corresponding store message by CorrelId even if the requestor did&#xd;
		-- not send the message as a MQSeries request message&#xd;
		SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;&#xd;
&#xd;
		-- Note that we're not copying the message body it is not required&#xd;
		-- to be stored, we can retrieve the reply to queue from just the MQMD	&#xd;
	    &#xd;
	    -- Also save the broker queue manager name to an environment variable so that it can be used in the MQMD header node &#xd;
		-- when sending to the provider&#xd;
		SET InputLocalEnvironment.Variables.correlId = InputRoot.MQMD.MsgId;&#xd;
		SET Environment.Variables.BrokerQueueManager = SQL.QueueManagerName;&#xd;
		&#xd;
		RETURN TRUE;&#xd;
	END;&#xd;
&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQHeaderNode label="Store Reply Address" mqmdAAAOptions="Add header" mqmdCodedCharSetId="1208" mqmdCorrelId="$LocalEnvironment/Variables/correlId" mqmdExpiry="3000" mqmdFeedback="0" mqmdFormat="MQSTR   " mqmdMsgId="$LocalEnvironment/Variables/correlId" mqmdMsgType="8" mqmdPersistence="0" mqmdPriority="-1" mqmdVersion="1" uuid="mqsi/Request#FCMComposite_1_8"/><ComIbmComputeNode label="Error.Create Error Response" throwExceptionOnDatabaseError="no" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Create_Error_Reply&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Copy MQMD which contains reply address&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
-- Set CorrelId to message ID so requester can retrieve by correlId&#xd;
	SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;&#xd;
-- Set up Error response&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.Status = -1;&#xd;
	SET OutputRoot.XMLNSC.Error.Text = &#xd;
	'Failed to send message in the Message Correlator for WebSphere MQ: request-response without persistence pattern';&#xd;
	RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Error.Reply if Request Mode" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE Request_Check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not send a reply if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; END IF;&#xd;
-- Only send a reply if in request mode (do not know where to go if error is in response flow)&#xd;
	IF  Environment.Variables.RRMode = 'Request' &#xd;
	THEN RETURN TRUE;&#xd;
	ELSE RETURN FALSE;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode destinationMode="reply" label="Error.Reply.ComIbmMQOutput" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/><ComIbmFlowOrderNode label="Error.Reply First" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3"/><ComIbmThrowNode label="Error.Throw" messageText="Pattern instance LeasingAs400 of the Message Correlator for WebSphere MQ: request-response with persistence pattern has detected an error. See the previous messages for details of the error " uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5"/><ComIbmComputeNode label="Error.Build Error Message" throwExceptionOnDatabaseError="no" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Build_Error_Message&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
	SET OutputRoot.Properties = NULL;&#xd;
	Call AddExceptionData();&#xd;
    END;&#xd;
	&#xd;
	CREATE PROCEDURE AddExceptionData() BEGIN&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.BrokerName  = SQL.BrokerName;&#xd;
	DECLARE ERef REFERENCE TO OutputRoot.XMLNSC.Error;&#xd;
	SET ERef.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET ERef.DTSTAMP =   CURRENT_TIMESTAMP;  &#xd;
	SET ERef.StatusCode = -1;&#xd;
     &#xd;
    -- Add some exception data for error and fault&#xd;
		DECLARE Error INTEGER;&#xd;
		DECLARE Text CHARACTER;&#xd;
		DECLARE Label CHARACTER;&#xd;
		DECLARE I INTEGER 1;&#xd;
		DECLARE K INTEGER;&#xd;
		DECLARE start REFERENCE TO InputExceptionList.*[1];&#xd;
&#xd;
		WHILE start.Number IS NOT NULL DO &#xd;
			SET Label = start.Label;&#xd;
			SET Error = start.Number;&#xd;
			IF Error = 3001 THEN&#xd;
				SET Text = start.Insert.Text;&#xd;
			ELSE&#xd;
				SET Text = start.Text;&#xd;
			END IF;&#xd;
			-- Don't include the "Caught exception and rethrowing message"&#xd;
			IF Error &lt;&gt; 2230 THEN&#xd;
				-- Process inserts&#xd;
				DECLARE Inserts Character;&#xd;
				DECLARE INS Integer;&#xd;
				SET Inserts = '';&#xd;
				-- Are there any inserts for this exception&#xd;
				IF EXISTS (start.Insert[]) THEN&#xd;
					-- If YES add them to inserts string&#xd;
				 	SET Inserts = Inserts || COALESCE(start.Insert[1].Text,'NULL')|| ' / ';&#xd;
				 	SET K = 1;&#xd;
				 	INSERTS: LOOP&#xd;
						IF CARDINALITY(start.Insert[])&gt; K &#xd;
						THEN &#xd;
							SET Inserts = Inserts || COALESCE(start.Insert[K+1].Text,'NULL')|| ' / ';&#xd;
						-- No more inserts to process&#xd;
						ELSE LEAVE INSERTS;&#xd;
						END IF;&#xd;
					SET K = K+1;&#xd;
					END LOOP INSERTS;&#xd;
				END IF;&#xd;
				SET ERef.Exception[I].Label = Label;&#xd;
				SET ERef.Exception[I].Error = Error;&#xd;
				SET ERef.Exception[I].Text = Text;&#xd;
				Set ERef.Exception[I].Inserts = COALESCE(Inserts, '');&#xd;
				&#xd;
				SET I = I+1; &#xd;
			END IF;&#xd;
			-- Move start to the last child of the field to which it currently points&#xd;
			MOVE start LASTCHILD;&#xd;
		END WHILE;&#xd;
&#xd;
	END;&#xd;
	&#xd;
&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Error.ErrorLoggingOn?" throwExceptionOnDatabaseError="no" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE ErrorQ_check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not write a second error message if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; 		&#xd;
	ELSE RETURN ErrorLoggingOn;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode label="Error.Error Output" persistenceMode="yes" transactionMode="no" uuid="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12"/><ComIbmComputeNode label="Set Request Mode" uuid="mqsi/Request#FCMComposite_1_10"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Request_Initialise&#xd;
&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
		SET OutputRoot = InputRoot;&#xd;
		&#xd;
		SET Environment.Variables.RRMode = 'Request';&#xd;
		&#xd;
		RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFlowOrderNode label="Log after processing" uuid="mqsi/Request#FCMComposite_1_36"/><ComIbmComputeNode computeMode="destinationAndMessage" label="Log.Create Log Message" throwExceptionOnDatabaseError="no" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE Compute MODULE CreateLogMessage&#xd;
&#xd;
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN&#xd;
-- Create logging info in MQRFH2 - add to existing message&#xd;
	SET OutputRoot = InputRoot;&#xd;
DECLARE outRef REFERENCE TO OutputRoot.MQRFH2;&#xd;
 IF LASTMOVE(outRef) THEN&#xd;
 -- MQRFH2 EXISTS&#xd;
    SET outRef.usr.BrokerName = SQL.BrokerName;&#xd;
    SET outRef.usr.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET outRef.usr.DTSTAMP =   CURRENT_TIMESTAMP; &#xd;
&#xd;
  &#xd;
 ELSE&#xd;
 -- CREATE THE MQRFH2 Header first&#xd;
    DECLARE MQMDRef REFERENCE TO OutputRoot.MQMD;	&#xd;
    CREATE NEXTSIBLING OF MQMDRef AS outRef DOMAIN('MQRFH2') NAME 'MQRFH2';&#xd;
    SET outRef.(MQRFH2.Field)Version = 2;&#xd;
    SET outRef.(MQRFH2.Field)Encoding = InputRoot.MQMD.Encoding;&#xd;
    SET outRef.(MQRFH2.Field)CodedCharSetId = InputRoot.MQMD.CodedCharSetId;&#xd;
    SET outRef.usr.BrokerName = SQL.BrokerName;&#xd;
    SET outRef.usr.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET outRef.usr.DTSTAMP =   CURRENT_TIMESTAMP; &#xd;
    SET OutputRoot.MQMD.Format = MQFMT_RF_HEADER_2;&#xd;
 END IF;&#xd;
&#xd;
END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQOutputNode label="Log.Write Log" persistenceMode="yes" transactionMode="no" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6"/><ComIbmFilterNode label="Log.Logging On?" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_11"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE CheckLogging&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
	IF Environment.Variables.ResponseLoggingOn AND (Environment.Variables.RRMode = 'Response') THEN RETURN TRUE;&#xd;
		END IF;&#xd;
	IF Environment.Variables.RequestLoggingOn AND (Environment.Variables.RRMode = 'Request') THEN RETURN TRUE;&#xd;
		END IF;&#xd;
		RETURN FALSE;&#xd;
	END;&#xd;
&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmTryCatchNode label="Log.Trace if Log Fails" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_15"/><ComIbmTraceNode label="Log.Trace" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_16"><patternProperty xml:space="preserve">&#xd;
Logging Failure&#xd;
=========&#xd;
&#xd;
${Environment.Variables.Error}&#xd;
==========</patternProperty></ComIbmTraceNode><ComIbmComputeNode label="Log.Create Trace Data" uuid="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE Compute MODULE CreateTraceData&#xd;
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN&#xd;
	DECLARE EnvVarRef REFERENCE TO Environment.Variables;&#xd;
	SET EnvVarRef.DTSTAMP = CURRENT_TIMESTAMP; &#xd;
	SET EnvVarRef.BrokerName = Substring(SQL.BrokerName from 1 for 128);&#xd;
    SET EnvVarRef.MessageFlowlabel = Substring(SQL.MessageFlowLabel from 1 for 128);&#xd;
    &#xd;
END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQOutputNode label="Save to Store" persistenceMode="no" transactionMode="no" uuid="mqsi/Request#FCMComposite_1_11"/><ComIbmFlowOrderNode label="Flow Order" uuid="mqsi/Request#FCMComposite_1_12"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_36" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_36" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_34" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_2" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#FCMComposite_1_2" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_34.mqsi/RequestProcessor#OutTerminal.Output" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_34" sourceTerminal="Output" targetNode="mqsi/Request#FCMComposite_1_2" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2" sourceTerminal="true" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_1" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="true" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="failure" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="unknown" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" sourceTerminal="false" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12" sourceTerminal="failure" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_12" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_10" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_10" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_5.mqsi/Error#FCMComposite_1_3" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_16" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_15" sourceTerminal="catch" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_17" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_15" sourceTerminal="try" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_11" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_11" sourceTerminal="true" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_3" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_6" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_36" sourceTerminal="second" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_15" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Request#FCMComposite_1_36" sourceTerminal="second" targetNode="mqsi/Request#FCMComposite_1_6" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_6.mqsi/Log#FCMComposite_1_15" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_3" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_7" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_2" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_4" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="failure" targetNode="mqsi/Request#FCMComposite_1_10" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_1" sourceTerminal="catch" targetNode="mqsi/Request#FCMComposite_1_10" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Request#FCMComposite_1_36" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_8" sourceTerminal="out" targetNode="mqsi/Request#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Request#FCMComposite_1_12" sourceTerminal="first" targetNode="mqsi/Request#FCMComposite_1_11" targetTerminal="in"/></MessageFlow>