<?xml version="1.0" encoding="UTF-8"?>
<MessageFlow><ConfigurablePropertyTable><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/><version value="$MQSI_VERSION=1 MQSI$"/></Documentation><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Build Error Message.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Build Error Message.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Build Error Message.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Create Error Response.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Create Error Response.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Create Error Response.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="queueManagerName" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="queueName" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="replyToQ" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="replyToQMgr" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="securityProfileName" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Error Output.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#ErrorLoggingOn?.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8"/><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#ErrorLoggingOn?.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8"/><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Error#Reply if Request Mode.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2"/><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Reply if Request Mode.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2"/><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Error#Reply.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Create Log Message.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Log Message.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Log Message.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Create Trace Data.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Trace Data.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Create Trace Data.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Log#Logging On?.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmFilter" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Logging On?.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmTrace" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Trace.filePath"><Documentation><longDesc/></Documentation><TargetProperty name="filePath" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_16"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.queueManagerName"><Documentation><longDesc/></Documentation><TargetProperty name="queueManagerName" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.replyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQ" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.replyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="replyToQMgr" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Log#Write Log.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Response#Compute.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Compute.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Compute.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_4"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/Response" nodePluginId="LeasingAs400_Flows" type="Boolean" uri="mqsi.Response#ErrorLoggingOn" userDefined="true"><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/></Documentation><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_11"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_12"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_9"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_4"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_5"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Response#Initialise.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_9"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Initialise.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_9"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Initialise.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_9"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Header.mqdlhDestQMgrName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQMgrName" uuid="mqsi/Response#FCMComposite_1_5"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Header.mqdlhDestQName"><Documentation><longDesc/></Documentation><TargetProperty name="mqdlhDestQName" uuid="mqsi/Response#FCMComposite_1_5"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Header.mqmdReplyToQ"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQ" uuid="mqsi/Response#FCMComposite_1_5"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQHeader" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Header.mqmdReplyToQMgr"><Documentation><longDesc/></Documentation><TargetProperty name="mqmdReplyToQMgr" uuid="mqsi/Response#FCMComposite_1_5"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Response#MQ Warning.connectDatasourceBeforeFlowStarts"><Documentation><longDesc value="This node is invoked when there something goes wrong when trying to retrieve the stored MQMD.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Warning.dataSource"><Documentation><longDesc value="This node is invoked when there something goes wrong when trying to retrieve the stored MQMD.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#MQ Warning.validateMaster"><Documentation><longDesc value="This node is invoked when there something goes wrong when trying to retrieve the stored MQMD.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_11"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.Response#Missing Stored Msg.connectDatasourceBeforeFlowStarts"><Documentation><longDesc value="This node is invoked when there is no message on the 'STORE' queue with the matching CorrelId.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Missing Stored Msg.dataSource"><Documentation><longDesc value="This node is invoked when there is no message on the 'STORE' queue with the matching CorrelId.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Missing Stored Msg.validateMaster"><Documentation><longDesc value="This node is invoked when there is no message on the 'STORE' queue with the matching CorrelId.  The node constructs and throws an appropriate exception."/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_12"/></ConfigurableProperty><ConfigurableProperty brokerDefault="0" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="Integer" uri="mqsi.Response#Read Response.additionalInstances"><Documentation><longDesc/></Documentation><TargetProperty name="additionalInstances" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="flow" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.componentLevel"><Documentation><longDesc/></Documentation><TargetProperty name="componentLevel" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.queueName"><Documentation><longDesc/></Documentation><TargetProperty name="queueName" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="-1" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="Integer" uri="mqsi.Response#Read Response.resetBrowseTimeout"><Documentation><longDesc/></Documentation><TargetProperty name="resetBrowseTimeout" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.securityProfileName"><Documentation><longDesc/></Documentation><TargetProperty name="securityProfileName" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.serializationToken"><Documentation><longDesc/></Documentation><TargetProperty name="serializationToken" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.topicProperty"><Documentation><longDesc/></Documentation><TargetProperty name="topicProperty" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmMQInput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Read Response.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty brokerDefault="inherit" nodeName="ComIbmMQOutput" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Reply.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_13.ComIbmMQReply#FCMComposite_1_1"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/ResponseProcessor" nodePluginId="LeasingAs400_Flows" type="String" uri="mqsi.Response#Response Processor.ENTORNO" userDefined="true"><Documentation><longDesc/></Documentation><TargetProperty name="ENTORNO" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3"/><TargetProperty name="ENTORNO" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2"/><TargetProperty name="ENTORNO" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/Response" nodePluginId="LeasingAs400_Flows" type="Boolean" uri="mqsi.Response#ResponseLoggingOn" userDefined="true"><Documentation><longDesc value="Generated by com.ibm.etools.mft.pattern.mbi.mrrc.synchmq Version 1.0     &#xd;&#xa;     &#xd;&#xa;$MQSI patternName=com.ibm.etools.mft.pattern.mbi.mrrc.synchmq MQSI$     &#xd;&#xa;$MQSI patternVersion=1.0 MQSI$     "/></Documentation><TargetProperty name="ResponseLoggingOn" uuid="mqsi/Response#FCMComposite_1_11"/><TargetProperty name="ResponseLoggingOn" uuid="mqsi/Response#FCMComposite_1_12"/><TargetProperty name="ResponseLoggingOn" uuid="mqsi/Response#FCMComposite_1_9"/><TargetProperty name="ResponseLoggingOn" uuid="mqsi/Response#FCMComposite_1_4"/><TargetProperty name="ResponseLoggingOn" uuid="mqsi/Response#FCMComposite_1_5"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmMQGet" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Retrieve.queueName"><Documentation><longDesc value="This MQ Get node reads  corresponding stored message, selected via the message correlator ID.  This message contains the original request MQMD containing the reply-to queue and queue manager name of the requestor application that was stored during the request flow"/></Documentation><TargetProperty name="queueName" uuid="mqsi/Response#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmMQGet" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.Response#Retrieve.validateMaster"><Documentation><longDesc value="This MQ Get node reads  corresponding stored message, selected via the message correlator ID.  This message contains the original request MQMD containing the reply-to queue and queue manager name of the requestor application that was stored during the request flow"/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmJavaCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#Appconfig.javaClassLoader"><Documentation><longDesc/></Documentation><TargetProperty name="javaClassLoader" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmJavaCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#Appconfig.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2"/></ConfigurableProperty><ConfigurableProperty nodeName="DTXPlugIn" nodePluginId="com.ibm.websphere.dtx.WTXPlugIn" type="String" uri="mqsi.ResponseProcessor#Correlación de WTX.CacheMap"><Documentation><longDesc/></Documentation><TargetProperty name="CacheMap" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="DTXPlugIn" nodePluginId="com.ibm.websphere.dtx.WTXPlugIn" type="String" uri="mqsi.ResponseProcessor#Correlación de WTX.CardNoToWire"><Documentation><longDesc/></Documentation><TargetProperty name="CardNoToWire" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="DTXPlugIn" nodePluginId="com.ibm.websphere.dtx.WTXPlugIn" type="String" uri="mqsi.ResponseProcessor#Correlación de WTX.MapServerLocation"><Documentation><longDesc/></Documentation><TargetProperty name="MapServerLocation" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7"/></ConfigurableProperty><ConfigurableProperty nodeName="mqsi/Error" nodePluginId="LeasingAs400_Flows" type="Boolean" uri="mqsi.ResponseProcessor#Error.ErrorLoggingOn" userDefined="true"><Documentation><longDesc/></Documentation><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7"/><TargetProperty name="ErrorLoggingOn" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.ResponseProcessor#Set Operacion.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#Set Operacion.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#Set Operacion.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" propertyCompiler="com.ibm.etools.mft.ibmnodes.compilers.BooleanPropertyCompiler" type="Boolean" uri="mqsi.ResponseProcessor#SetMSG.connectDatasourceBeforeFlowStarts"><Documentation><longDesc/></Documentation><TargetProperty name="connectDatasourceBeforeFlowStarts" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#SetMSG.dataSource"><Documentation><longDesc/></Documentation><TargetProperty name="dataSource" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10"/></ConfigurableProperty><ConfigurableProperty brokerDefault="none" nodeName="ComIbmCompute" nodePluginId="com.ibm.etools.mft.ibmnodes" type="String" uri="mqsi.ResponseProcessor#SetMSG.validateMaster"><Documentation><longDesc/></Documentation><TargetProperty name="validateMaster" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10"/></ConfigurableProperty></ConfigurablePropertyTable><ComIbmMQInputNode convert="yes" convertCodedCharSetId="819" convertEncoding="516" label="Read Response" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_7"/><ComIbmMQGetNode copyMessage="copyEntireMessage" getWithCorrelID="yes" label="Retrieve" minimumGetBufferSize="1" outputDataLocation="OutputRoot.MQMD" resultDataLocation="ResultRoot.MQMD" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_10"/><ComIbmComputeNode label="MQ Warning" uuid="mqsi/Response#FCMComposite_1_11"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE HandleMQGetWarning&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
		-- The MQGet Node received a MQ Warning&#xd;
		-- The Tree will contain just a MQMD and any message content received &#xd;
		-- in a BLOB, no parsing will be performed.&#xd;
		-- This could occur if the get options were set to accept truncated&#xd;
		-- messages. We have not set that option here.&#xd;
		-- Throw a user exception&#xd;
		DECLARE reasonStr CHAR;&#xd;
		SET Environment.Variables.StatusCode = -3; &#xd;
		SET reasonStr = 'Message removed';&#xd;
		THROW USER EXCEPTION SEVERITY 3 MESSAGE 2372 VALUES(reasonStr);&#xd;
		RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmComputeNode label="Missing Stored Msg" uuid="mqsi/Response#FCMComposite_1_12"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE HandleMissingStoredMsg&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
		-- The MQGet Node failed to get a message from the Store Queue&#xd;
		-- Throw a user exception&#xd;
		DECLARE reasonStr CHAR;&#xd;
		SET reasonStr = 'Failure to recover reply address in the Message Correlator for WebSphere MQ: request-response without persistence pattern';&#xd;
		THROW USER EXCEPTION SEVERITY 3 MESSAGE 2372 VALUES(reasonStr);&#xd;
		RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQOutputNode destinationMode="reply" label="Reply.ComIbmMQOutput" persistenceMode="no" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_13.ComIbmMQReply#FCMComposite_1_1"/><ComIbmComputeNode computeMode="destination" label="Initialise" uuid="mqsi/Response#FCMComposite_1_9"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE SetResponseMode&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
		SET Environment.Variables.RRMode = 'Response';&#xd;
		SET Environment.Variables.ResponseLoggingOn = ResponseLoggingOn;&#xd;
&#xd;
		RETURN TRUE;&#xd;
		END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmComputeNode label="Response Processor.Set Operacion" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE ResponseProcessor_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		DECLARE wholeMsgChar CHARACTER CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		
		SET InputLocalEnvironment.Variables.Operacion = SUBSTRING(wholeMsgChar FROM 18 FOR 3);
		
		DECLARE newBlob BLOB CAST(wholeMsgChar AS BLOB CCSID 1208 ENCODING 546);
		
		SET OutputRoot.BLOB.BLOB = newBlob;
		
		SET OutputRoot.MQMD.Encoding = 546;
		SET OutputRoot.MQMD.CodedCharSetId = 1208;
		--SET OutputRoot.MQMD.Format = 'MQSTR';
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmComputeNode label="Response Processor.Error.Create Error Response" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Create_Error_Reply&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Copy MQMD which contains reply address&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
-- Set CorrelId to message ID so requester can retrieve by correlId&#xd;
	SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;&#xd;
-- Set up Error response&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.Status = -1;&#xd;
	SET OutputRoot.XMLNSC.Error.Text = &#xd;
	'Failed to send message in the Message Correlator for WebSphere MQ: request-response without persistence pattern';&#xd;
	RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Response Processor.Error.Reply if Request Mode" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE Request_Check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not send a reply if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; END IF;&#xd;
-- Only send a reply if in request mode (do not know where to go if error is in response flow)&#xd;
	IF  Environment.Variables.RRMode = 'Request' &#xd;
	THEN RETURN TRUE;&#xd;
	ELSE RETURN FALSE;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode destinationMode="reply" label="Response Processor.Error.Reply.ComIbmMQOutput" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/><ComIbmFlowOrderNode label="Response Processor.Error.Reply First" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_3"/><ComIbmThrowNode label="Response Processor.Error.Throw" messageText="Pattern instance LeasingAs400 of the Message Correlator for WebSphere MQ: request-response with persistence pattern has detected an error. See the previous messages for details of the error " uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5"/><ComIbmComputeNode label="Response Processor.Error.Build Error Message" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Build_Error_Message&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
	SET OutputRoot.Properties = NULL;&#xd;
	Call AddExceptionData();&#xd;
    END;&#xd;
	&#xd;
	CREATE PROCEDURE AddExceptionData() BEGIN&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.BrokerName  = SQL.BrokerName;&#xd;
	DECLARE ERef REFERENCE TO OutputRoot.XMLNSC.Error;&#xd;
	SET ERef.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET ERef.DTSTAMP =   CURRENT_TIMESTAMP;  &#xd;
	SET ERef.StatusCode = -1;&#xd;
     &#xd;
    -- Add some exception data for error and fault&#xd;
		DECLARE Error INTEGER;&#xd;
		DECLARE Text CHARACTER;&#xd;
		DECLARE Label CHARACTER;&#xd;
		DECLARE I INTEGER 1;&#xd;
		DECLARE K INTEGER;&#xd;
		DECLARE start REFERENCE TO InputExceptionList.*[1];&#xd;
&#xd;
		WHILE start.Number IS NOT NULL DO &#xd;
			SET Label = start.Label;&#xd;
			SET Error = start.Number;&#xd;
			IF Error = 3001 THEN&#xd;
				SET Text = start.Insert.Text;&#xd;
			ELSE&#xd;
				SET Text = start.Text;&#xd;
			END IF;&#xd;
			-- Don't include the "Caught exception and rethrowing message"&#xd;
			IF Error &lt;&gt; 2230 THEN&#xd;
				-- Process inserts&#xd;
				DECLARE Inserts Character;&#xd;
				DECLARE INS Integer;&#xd;
				SET Inserts = '';&#xd;
				-- Are there any inserts for this exception&#xd;
				IF EXISTS (start.Insert[]) THEN&#xd;
					-- If YES add them to inserts string&#xd;
				 	SET Inserts = Inserts || COALESCE(start.Insert[1].Text,'NULL')|| ' / ';&#xd;
				 	SET K = 1;&#xd;
				 	INSERTS: LOOP&#xd;
						IF CARDINALITY(start.Insert[])&gt; K &#xd;
						THEN &#xd;
							SET Inserts = Inserts || COALESCE(start.Insert[K+1].Text,'NULL')|| ' / ';&#xd;
						-- No more inserts to process&#xd;
						ELSE LEAVE INSERTS;&#xd;
						END IF;&#xd;
					SET K = K+1;&#xd;
					END LOOP INSERTS;&#xd;
				END IF;&#xd;
				SET ERef.Exception[I].Label = Label;&#xd;
				SET ERef.Exception[I].Error = Error;&#xd;
				SET ERef.Exception[I].Text = Text;&#xd;
				Set ERef.Exception[I].Inserts = COALESCE(Inserts, '');&#xd;
				&#xd;
				SET I = I+1; &#xd;
			END IF;&#xd;
			-- Move start to the last child of the field to which it currently points&#xd;
			MOVE start LASTCHILD;&#xd;
		END WHILE;&#xd;
&#xd;
	END;&#xd;
	&#xd;
&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Response Processor.Error.ErrorLoggingOn?" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE ErrorQ_check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not write a second error message if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; 		&#xd;
	ELSE RETURN ErrorLoggingOn;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode label="Response Processor.Error.Error Output" persistenceMode="yes" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12"/><DTXPlugInNode ExternalButton="E" LocalCompiledMap="C:\Users\Admin\Desktop\bar As400\AS400ToHost.mmc" ProjectButton="E" label="Response Processor.Correlación de WTX" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7"><Attribute type="Complex" uuid="OutputProperties"><MbTable><Row><OutNo type="Integer">1</OutNo><MessageDomain type="String">BLOB</MessageDomain><MessageSet type="String"></MessageSet><MessageType type="String"></MessageType><MessageFormat type="String"></MessageFormat><CCSID type="Integer">0</CCSID><Encoding type="Integer">0</Encoding></Row></MbTable></Attribute><Terminal label="out1" type="output"/></DTXPlugInNode><ComIbmJavaComputeNode label="Response Processor.Appconfig" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2"><javaClassProperty xml:space="preserve">com.ibm.vyg.ResponseProcessor_Appconfig2</javaClassProperty></ComIbmJavaComputeNode><ComIbmFlowOrderNode label="Response Processor.Flow Order1" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_4"/><ComIbmComputeNode label="Response Processor.SetMSG" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE ResponseSetMSG
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		SET OutputRoot.BLOB.UnknownParserName = 'MQSTR';
		--SET OutputRoot.MQRFH2.mcd.Msd = 'MQSTR';
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFlowOrderNode label="Response Processor.Flow Order" uuid="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_11"/><ComIbmComputeNode label="Error.Create Error Response" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Create_Error_Reply&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Copy MQMD which contains reply address&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
-- Set CorrelId to message ID so requester can retrieve by correlId&#xd;
	SET OutputRoot.MQMD.CorrelId = InputRoot.MQMD.MsgId;&#xd;
-- Set up Error response&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.Status = -1;&#xd;
	SET OutputRoot.XMLNSC.Error.Text = &#xd;
	'Failed to send message in the Message Correlator for WebSphere MQ: request-response without persistence pattern';&#xd;
	RETURN TRUE;&#xd;
	END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Error.Reply if Request Mode" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE Request_Check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not send a reply if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; END IF;&#xd;
-- Only send a reply if in request mode (do not know where to go if error is in response flow)&#xd;
	IF  Environment.Variables.RRMode = 'Request' &#xd;
	THEN RETURN TRUE;&#xd;
	ELSE RETURN FALSE;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode destinationMode="reply" label="Error.Reply.ComIbmMQOutput" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1"/><ComIbmFlowOrderNode label="Error.Reply First" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3"/><ComIbmThrowNode label="Error.Throw" messageText="Pattern instance LeasingAs400 of the Message Correlator for WebSphere MQ: request-response with persistence pattern has detected an error. See the previous messages for details of the error " uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5"/><ComIbmComputeNode label="Error.Build Error Message" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Build_Error_Message&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
	SET OutputRoot.MQMD = InputRoot.MQMD;&#xd;
	SET OutputRoot.Properties = NULL;&#xd;
	Call AddExceptionData();&#xd;
    END;&#xd;
	&#xd;
	CREATE PROCEDURE AddExceptionData() BEGIN&#xd;
	CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN('XMLNSC') NAME 'XMLNSC';&#xd;
	SET OutputRoot.XMLNSC.Error.BrokerName  = SQL.BrokerName;&#xd;
	DECLARE ERef REFERENCE TO OutputRoot.XMLNSC.Error;&#xd;
	SET ERef.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET ERef.DTSTAMP =   CURRENT_TIMESTAMP;  &#xd;
	SET ERef.StatusCode = -1;&#xd;
     &#xd;
    -- Add some exception data for error and fault&#xd;
		DECLARE Error INTEGER;&#xd;
		DECLARE Text CHARACTER;&#xd;
		DECLARE Label CHARACTER;&#xd;
		DECLARE I INTEGER 1;&#xd;
		DECLARE K INTEGER;&#xd;
		DECLARE start REFERENCE TO InputExceptionList.*[1];&#xd;
&#xd;
		WHILE start.Number IS NOT NULL DO &#xd;
			SET Label = start.Label;&#xd;
			SET Error = start.Number;&#xd;
			IF Error = 3001 THEN&#xd;
				SET Text = start.Insert.Text;&#xd;
			ELSE&#xd;
				SET Text = start.Text;&#xd;
			END IF;&#xd;
			-- Don't include the "Caught exception and rethrowing message"&#xd;
			IF Error &lt;&gt; 2230 THEN&#xd;
				-- Process inserts&#xd;
				DECLARE Inserts Character;&#xd;
				DECLARE INS Integer;&#xd;
				SET Inserts = '';&#xd;
				-- Are there any inserts for this exception&#xd;
				IF EXISTS (start.Insert[]) THEN&#xd;
					-- If YES add them to inserts string&#xd;
				 	SET Inserts = Inserts || COALESCE(start.Insert[1].Text,'NULL')|| ' / ';&#xd;
				 	SET K = 1;&#xd;
				 	INSERTS: LOOP&#xd;
						IF CARDINALITY(start.Insert[])&gt; K &#xd;
						THEN &#xd;
							SET Inserts = Inserts || COALESCE(start.Insert[K+1].Text,'NULL')|| ' / ';&#xd;
						-- No more inserts to process&#xd;
						ELSE LEAVE INSERTS;&#xd;
						END IF;&#xd;
					SET K = K+1;&#xd;
					END LOOP INSERTS;&#xd;
				END IF;&#xd;
				SET ERef.Exception[I].Label = Label;&#xd;
				SET ERef.Exception[I].Error = Error;&#xd;
				SET ERef.Exception[I].Text = Text;&#xd;
				Set ERef.Exception[I].Inserts = COALESCE(Inserts, '');&#xd;
				&#xd;
				SET I = I+1; &#xd;
			END IF;&#xd;
			-- Move start to the last child of the field to which it currently points&#xd;
			MOVE start LASTCHILD;&#xd;
		END WHILE;&#xd;
&#xd;
	END;&#xd;
	&#xd;
&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmFilterNode label="Error.ErrorLoggingOn?" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE ErrorQ_check&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
-- Do not write a second error message if this message has already been backed out&#xd;
	IF Root.MQMD.BackoutCount &gt; 0 THEN RETURN FALSE; 		&#xd;
	ELSE RETURN ErrorLoggingOn;&#xd;
	END IF;&#xd;
	END;&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmMQOutputNode label="Error.Error Output" persistenceMode="yes" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12"/><ComIbmFlowOrderNode label="Log after Reply" uuid="mqsi/Response#FCMComposite_1_16"/><ComIbmComputeNode computeMode="destinationAndMessage" label="Log.Create Log Message" throwExceptionOnDatabaseError="no" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE Compute MODULE CreateLogMessage&#xd;
&#xd;
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN&#xd;
-- Create logging info in MQRFH2 - add to existing message&#xd;
	SET OutputRoot = InputRoot;&#xd;
DECLARE outRef REFERENCE TO OutputRoot.MQRFH2;&#xd;
 IF LASTMOVE(outRef) THEN&#xd;
 -- MQRFH2 EXISTS&#xd;
    SET outRef.usr.BrokerName = SQL.BrokerName;&#xd;
    SET outRef.usr.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET outRef.usr.DTSTAMP =   CURRENT_TIMESTAMP; &#xd;
&#xd;
  &#xd;
 ELSE&#xd;
 -- CREATE THE MQRFH2 Header first&#xd;
    DECLARE MQMDRef REFERENCE TO OutputRoot.MQMD;	&#xd;
    CREATE NEXTSIBLING OF MQMDRef AS outRef DOMAIN('MQRFH2') NAME 'MQRFH2';&#xd;
    SET outRef.(MQRFH2.Field)Version = 2;&#xd;
    SET outRef.(MQRFH2.Field)Encoding = InputRoot.MQMD.Encoding;&#xd;
    SET outRef.(MQRFH2.Field)CodedCharSetId = InputRoot.MQMD.CodedCharSetId;&#xd;
    SET outRef.usr.BrokerName = SQL.BrokerName;&#xd;
    SET outRef.usr.MessageFlowLabel = SQL.MessageFlowLabel; &#xd;
    SET outRef.usr.DTSTAMP =   CURRENT_TIMESTAMP; &#xd;
    SET OutputRoot.MQMD.Format = MQFMT_RF_HEADER_2;&#xd;
 END IF;&#xd;
&#xd;
END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQOutputNode label="Log.Write Log" persistenceMode="yes" transactionMode="no" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6"/><ComIbmFilterNode label="Log.Logging On?" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_11"><filterExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE FILTER MODULE CheckLogging&#xd;
	CREATE FUNCTION Main() RETURNS BOOLEAN&#xd;
	BEGIN&#xd;
	IF Environment.Variables.ResponseLoggingOn AND (Environment.Variables.RRMode = 'Response') THEN RETURN TRUE;&#xd;
		END IF;&#xd;
	IF Environment.Variables.RequestLoggingOn AND (Environment.Variables.RRMode = 'Request') THEN RETURN TRUE;&#xd;
		END IF;&#xd;
		RETURN FALSE;&#xd;
	END;&#xd;
&#xd;
END MODULE;</filterExpressionProperty></ComIbmFilterNode><ComIbmTryCatchNode label="Log.Trace if Log Fails" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_15"/><ComIbmTraceNode label="Log.Trace" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_16"><patternProperty xml:space="preserve">&#xd;
Logging Failure&#xd;
=========&#xd;
&#xd;
${Environment.Variables.Error}&#xd;
==========</patternProperty></ComIbmTraceNode><ComIbmComputeNode label="Log.Create Trace Data" uuid="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE Compute MODULE CreateTraceData&#xd;
CREATE FUNCTION main() RETURNS BOOLEAN BEGIN&#xd;
	DECLARE EnvVarRef REFERENCE TO Environment.Variables;&#xd;
	SET EnvVarRef.DTSTAMP = CURRENT_TIMESTAMP; &#xd;
	SET EnvVarRef.BrokerName = Substring(SQL.BrokerName from 1 for 128);&#xd;
    SET EnvVarRef.MessageFlowlabel = Substring(SQL.MessageFlowLabel from 1 for 128);&#xd;
    &#xd;
END;&#xd;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmComputeNode label="Compute" uuid="mqsi/Response#FCMComposite_1_4"><computeExpressionProperty xml:space="preserve">
CREATE SCHEMA mqsi PATH ""

DECLARE RequestLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn  EXTERNAL BOOLEAN TRUE;
DECLARE ErrorLoggingOn  EXTERNAL BOOLEAN TRUE;
CREATE COMPUTE MODULE Response_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = 2;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = 'MQSTR';
		SET OutputRoot.MQRFH2.(MQRFH2.Field)NameValueCCSID = 1208;
		--CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		
		
		
		--SET OutputRoot.MQRFH2 = null;
		--SET OutputRoot.MQMD.Format = 'MQSTR   ';
		--SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = 'MQSTR';
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I &lt; J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;</computeExpressionProperty></ComIbmComputeNode><ComIbmMQHeaderNode label="MQ Header" mqmdAAAOptions="Modify header" mqmdCodedCharSetId="Inherit" mqmdCorrelId="Inherit" mqmdExpiry="Inherit" mqmdFeedback="Inherit" mqmdFormat="MQSTR   " mqmdMsgId="Inherit" mqmdMsgType="Inherit" mqmdVersion="1" uuid="mqsi/Response#FCMComposite_1_5"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_1" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8" sourceTerminal="unknown" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8" sourceTerminal="false" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_12" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_3" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_6.mqsi/Error#FCMComposite_1_3" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_4.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_5" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_13.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_5" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_13" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_13.ComIbmMQReply#InTerminal.in" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_13.ComIbmMQReply#FCMComposite_1_1" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7" sourceTerminal="out1" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_10" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_4" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_7" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_11" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_11" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_16" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_16" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_1" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_3" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_4" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_10" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#FCMComposite_1_4" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_1.mqsi/ResponseProcessor#OutTerminal.Output" targetTerminal="in"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_1" sourceTerminal="Output" targetNode="mqsi/Response#FCMComposite_1_10" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_1" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="unknown" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" sourceTerminal="false" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_12" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_5" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" sourceTerminal="second" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_2" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" sourceTerminal="first" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_8" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="catch" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="catch" targetNode="mqsi/Response#FCMComposite_1_2" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="failure" targetNode="mqsi/Response#FCMComposite_1_2" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_2.mqsi/Error#FCMComposite_1_3" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_16" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_15" sourceTerminal="catch" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_17" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_15" sourceTerminal="try" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_11" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_11" sourceTerminal="true" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_3" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_6" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_16" sourceTerminal="second" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_15" targetTerminal="in"><LogicalConnection layer="1" sourceNode="mqsi/Response#FCMComposite_1_16" sourceTerminal="second" targetNode="mqsi/Response#FCMComposite_1_3" targetTerminal="Input"/><LogicalConnection layer="2" sourceNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#InTerminal.Input" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_3.mqsi/Log#FCMComposite_1_15" targetTerminal="in"/></Connection><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="warning" targetNode="mqsi/Response#FCMComposite_1_11" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="noMessage" targetNode="mqsi/Response#FCMComposite_1_12" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_7" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_9" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_9" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_16" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_10" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_4" targetTerminal="in"/><Connection sourceNode="mqsi/Response#FCMComposite_1_4" sourceTerminal="out" targetNode="mqsi/Response#FCMComposite_1_5" targetTerminal="in"/></MessageFlow>